@page "/servers/add"

@inject NavigationManager _navigationManager
@rendermode InteractiveServer
@inject IServersEFCoreRepository ServersEFCoreRepository


<h3>Add Server</h3>
<br />
<br />

	<EditForm Model="server" FormName="addServerForm" OnValidSubmit="Submit">
	<DataAnnotationsValidator></DataAnnotationsValidator>
	<div class="row mb-3">
		<div class="col-2">
			<label class="col-form-label">Name</label>
		</div>
		<div class="col-6">
			<InputText @bind-Value="server.Name" class="form-control"></InputText>
		</div>
		<div class="col">
			<ValidationMessage For="() => server.Name"></ValidationMessage>
		</div>
	</div>

	<div class="row mb-3">
		<div class="col-2">
			<label class="col-form-label">City</label>
		</div>
		<div class="col-6">
			<InputText @bind-Value="server.City" class="form-control"></InputText>
		</div>
		<div class="col">
			<ValidationMessage For="() => server.City"></ValidationMessage>
		</div>
	</div>

	<div class="row mb-3">
		<div class="col-2">
			<label class="col-form-label">Online</label>
		</div>
		<div class="col-6">
			<InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
		</div>
	</div>
	<br />

	<button class="btn btn-primary" type="submit">Add</button>
	<a href="/servers" class="btn btn-primary">Close</a>
	<ValidationSummary></ValidationSummary>

</EditForm>



@code {
	[SupplyParameterFromForm]
	private Server? server { get; set; } = new Server() { IsOnline = false };

	private void Submit()
	{
		if(server != null)
		{
			ServersEFCoreRepository.AddServer(server);

		}

		_navigationManager.NavigateTo($"/servers/back_from/{this.server?.City}");
	}

}
